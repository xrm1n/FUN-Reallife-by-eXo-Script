<html>
<head>
    <link rel="stylesheet" href="http://mta/local/files/html/css/bootstrap.min.css">
	<link rel="stylesheet" href="http://mta/local/files/html/css/bootstrap.ingame.css">
	<link rel="stylesheet" href="http://mta/local/files/html/css/editor/codemirror.css">
    <link rel="stylesheet" href="http://mta/local/files/html/css/editor/material.css">
    <link rel="stylesheet" href="http://mta/local/files/html/css/editor/base16-light.css">
	<script src="http://mta/local/files/html/js/editor/codemirror.js"></script>
	<script src="http://mta/local/files/html/js/editor/lua.js"></script>
    <script src="http://mta/local/files/html/js/editor/templates.js"></script>
	<script src="http://mta/local/files/html/js/mtaevents.min.js"></script>
	<script src="http://mta/local/files/html/js/jquery-3.2.1.min.js"></script>
    <script src="http://mta/local/files/html/js/bootstrap.min.js"></script>
	<style>
 		html, body, form, textarea {
			background-color: transparent;
			background: transparent;
        }
        form, textarea, .codemirror {
            width:100%;
			height:90%;
        }
    </style>
</head>
<body>
	<nav class="navbar navbar-exo">
		<ul class="nav navbar-nav">
			<!--<li><a href='#' onclick="updateCodeMirror(templates.constructor)">constructor</a></li>
			<li><a href='#' onclick="updateCodeMirror(templates.destructor)">destructor</a></li>-->
			<li class="dropdown">
				<a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">GUI Elemente <span class="caret"></span></a>
				<ul class="dropdown-menu">
					<li><a href="#" onclick="updateCodeMirror(templates.window);">Window</a></li>
					<li><a href="#" onclick="updateCodeMirror(templates.label);">Label</a></li>
					<li><a href="#" onclick="updateCodeMirror(templates.button);">Button</a></li>
					<li><a href="#" onclick="updateCodeMirror(templates.gridlist);">GridList</a></li>
				</ul>
			</li>
		</ul>
	</nav>
	<textarea id="code" name="code"></textarea>
    <script>
		var Settings = {};

		String.prototype.replaceAll = function(search, replacement) {
			var target = this;
			return target.split(search).join(replacement);
		};

		var editor = CodeMirror.fromTextArea(document.getElementById("code"), {
            lineNumbers: true,
            styleActiveLine: true,
            matchBrackets: true,
            theme: "material",
            mode: "lua",
            indentWithTabs: true,
            tabSize: 4,
            indentUnit: 4,
		});

		Settings.editor = editor;
		Settings.className = "NewGUI";

		function updateCodeMirror(data){
			var editor = Settings.editor;
			editor.focus()
			data = data.replaceAll("Classname", Settings.className);
			var selection = editor.getSelection();
			if(selection.length>0){
				editor.replaceSelection(data);
			}
			else{
				var doc = editor.getDoc();
				var cursor = doc.getCursor();
				var pos = {
				line: cursor.line,
				ch: cursor.ch
				}
				doc.replaceRange(data, pos);
			}
		}

        mtatools.registerEvent("onCodeEditorRequest", function() {
            console.log("requesting code...")
            mta.triggerEvent("onCodeEditorSend", editor.getValue());
        });
        mtatools.registerEvent("onCodeEditorThemeChange", function(theme) {
            editor.setOption("theme", theme);
		});
		mtatools.registerEvent("onCodeEditorCreateClass", function() {
			Settings.editor.setValue("");
			updateCodeMirror(templates.newClass.replaceAll("Classname", Settings.className));
		});

		mtatools.registerEvent("onCodeEditorClassNameChanged", function(name) {
			Settings.className = name;
		});

    </script>
</body>

</html>
